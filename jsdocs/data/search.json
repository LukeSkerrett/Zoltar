{"list":[{"title":"addCardToScene","link":"<a href=\"global.html#addCardToScene\">addCardToScene</a>","description":"Generates card and displays on screen"},{"title":"animate","link":"<a href=\"global.html#animate\">animate</a>","description":"Animation farm; generates each frame and calls self"},{"title":"animateFlickerFrame","link":"<a href=\"global.html#animateFlickerFrame\">animateFlickerFrame</a>","description":"Generates difference from last frame in terms of background lights flickering"},{"title":"animateShakeFrame","link":"<a href=\"global.html#animateShakeFrame\">animateShakeFrame</a>","description":"Generates difference from last frame in terms of camera shake"},{"title":"animateTicketSlideFrame","link":"<a href=\"global.html#animateTicketSlideFrame\">animateTicketSlideFrame</a>","description":"Generates difference from last frame in terms of ticket sliding out of dispenser"},{"title":"assignTicketContent","link":"<a href=\"global.html#assignTicketContent\">assignTicketContent</a>","description":"Assigns fortune and lucky numbers to the ticket"},{"title":"calcMidDistance","link":"<a href=\"global.html#calcMidDistance\">calcMidDistance</a>","description":"Helper to calculate a 'step' in the direction of targetPos from objectPos in 3 dimensions"},{"title":"canTriggerEvent","link":"<a href=\"global.html#canTriggerEvent\">canTriggerEvent</a>","description":"Returns whether or not new event can be queued"},{"title":"chooseOptionFromArr","link":"<a href=\"global.html#chooseOptionFromArr\">chooseOptionFromArr</a>","description":"Chooses a random item from an arrary"},{"title":"clamp","link":"<a href=\"global.html#clamp\">clamp</a>","description":"Clamps value between high and low value, inclusive"},{"title":"closeTicket","link":"<a href=\"global.html#closeTicket\">closeTicket</a>","description":"Removes ticket from screen and allows Zoltar to pressed again"},{"title":"conditionalAnimateSlideCameraFrame","link":"<a href=\"global.html#conditionalAnimateSlideCameraFrame\">conditionalAnimateSlideCameraFrame</a>","description":"Generates frame tending camera toward default position if state allows"},{"title":"convertArrToReadableString","link":"<a href=\"global.html#convertArrToReadableString\">convertArrToReadableString</a>","description":"Takes in an integer array and returns a string of integers separated by\n\t\tcommas with an 'and' after final comma"},{"title":"createEventListeners","link":"<a href=\"global.html#createEventListeners\">createEventListeners</a>","description":"Creates the Event Listeners required for the page to function."},{"title":"createFortuneOnTicket","link":"<a href=\"global.html#createFortuneOnTicket\">createFortuneOnTicket</a>","description":"Replaces text on card in DOM with new fortune and new list of lucky numbers."},{"title":"createStoreButtonListener","link":"<a href=\"global.html#createStoreButtonListener\">createStoreButtonListener</a>","description":"Creates an event listener or to save or discard ticket so that\ninit does not exceed 25 lines."},{"title":"deleteCard","link":"<a href=\"global.html#deleteCard\">deleteCard</a>","description":"Deletes a specified card from history and local storage"},{"title":"displayStorage","link":"<a href=\"global.html#displayStorage\">displayStorage</a>","description":"Displays the tickets from local storage"},{"title":"displayStorage","link":"<a href=\"global.html#displayStorage\">displayStorage</a>","description":"Fetches and displays list of saved tickets"},{"title":"displayTicket","link":"<a href=\"global.html#displayTicket\">displayTicket</a>","description":"Slides ticket onto screen"},{"title":"displayTicketPrompt","link":"<a href=\"global.html#displayTicketPrompt\">displayTicketPrompt</a>","description":"Displays the ticket prompt"},{"title":"exitHistory","link":"<a href=\"global.html#exitHistory\">exitHistory</a>","description":"Hide history from screen, close cover, and reset environment"},{"title":"flickerLights","link":"<a href=\"global.html#flickerLights\">flickerLights</a>","description":"Adjusts vignette value to seem like the lights are flickers.\nIf someone wants to rewrite this then feel free lol"},{"title":"flipTicket","link":"<a href=\"global.html#flipTicket\">flipTicket</a>","description":"Starting from image face of ticket, flip"},{"title":"getAllTickets","link":"<a href=\"global.html#getAllTickets\">getAllTickets</a>","description":"Fetches and returns array of ticket objects"},{"title":"getAudio","link":"<a href=\"global.html#getAudio\">getAudio</a>","description":"Gets Background audio\nGets thunderAudio"},{"title":"getImages","link":"<a href=\"global.html#getImages\">getImages</a>","description":"Gets list of images from Json file"},{"title":"getNextSelected","link":"<a href=\"global.html#getNextSelected\">getNextSelected</a>","description":"Returns index offset by value of dir, clamped to ends of array"},{"title":"getResponses","link":"<a href=\"global.html#getResponses\">getResponses</a>","description":"Gets List of responses from Json file"},{"title":"go","link":"<a href=\"global.html#go\">go</a>","description":"Initiates audio when user clicks on splash screen\nFades the audio in over a period of 5 seconds"},{"title":"handleHoverListeners","link":"<a href=\"global.html#handleHoverListeners\">handleHoverListeners</a>","description":"Helper function to register or unregister hover listeners"},{"title":"handleKeypress","link":"<a href=\"global.html#handleKeypress\">handleKeypress</a>","description":"Decides and calls appropriate action for all keypresses heard in window"},{"title":"handleResize","link":"<a href=\"global.html#handleResize\">handleResize</a>","description":"Event handler for the resize event. Updates the view state based on the\ncurrent size of the domElement."},{"title":"handleResize","link":"<a href=\"global.html#handleResize\">handleResize</a>","description":"Prevents damage from window resize to camera controls and viewport"},{"title":"helperClampLonLat","link":"<a href=\"global.html#helperClampLonLat\">helperClampLonLat</a>","description":"Helper function clamp either lon or lat to min and max bounds specified in this.options"},{"title":"hideSavePrompt","link":"<a href=\"global.html#hideSavePrompt\">hideSavePrompt</a>","description":"Hides prompt for user to save or discard ticket"},{"title":"HistoricalTicket","link":"<a href=\"HistoricalTicket.html\">HistoricalTicket</a>","description":"HistoricalTicket class for creating custom HTML elements. This class represents a ticket that a\nuser previously received, and will be displayed in aggregate with rest of tickets to user. State\ncan be set to control displayed fortune and lucky numbers."},{"title":"HistoricalTicket#addTransitionEffects","link":"<a href=\"HistoricalTicket.html#addTransitionEffects\">addTransitionEffects</a>","description":"Adds transitions to card for animation of flip (necessary to avoid transition during setup)"},{"title":"HistoricalTicket#content","link":"<a href=\"HistoricalTicket.html#content\">content</a>","description":"Setter for the content of the HistoricalTicket. Given an object with a 'currentMessage'\nand 'currentNumbers' properties, updates the ticket content with appropriate information"},{"title":"HistoricalTicket#fetchElementsFromDOM","link":"<a href=\"HistoricalTicket.html#fetchElementsFromDOM\">fetchElementsFromDOM</a>","description":"Finds necessary HTML elements in shadow root and puts into this.dom object"},{"title":"HistoricalTicket#flipCard","link":"<a href=\"HistoricalTicket.html#flipCard\">flipCard</a>","description":"Flips card, toggling between front and back"},{"title":"HistoricalTicket#handleButtonOverlay","link":"<a href=\"HistoricalTicket.html#handleButtonOverlay\">handleButtonOverlay</a>","description":"Makes overlay containing discard and flip buttons visible to user"},{"title":"historyCircleButtonFunc","link":"<a href=\"global.html#historyCircleButtonFunc\">historyCircleButtonFunc</a>","description":"Gets all the tickets from storage and displays them\nTODO: This function needs some clean up."},{"title":"historyIsOpen","link":"<a href=\"global.html#historyIsOpen\">historyIsOpen</a>","description":"Returns if history is currently displayed"},{"title":"isHistoryOnScreen","link":"<a href=\"global.html#isHistoryOnScreen\">isHistoryOnScreen</a>","description":"Returns whether or not the tickets are on screen"},{"title":"isTicketCurrentlyDisplayed","link":"<a href=\"global.html#isTicketCurrentlyDisplayed\">isTicketCurrentlyDisplayed</a>","description":"Gets whether or not fortune card is currently on screen"},{"title":"isTicketCurrentlyFlipped","link":"<a href=\"global.html#isTicketCurrentlyFlipped\">isTicketCurrentlyFlipped</a>","description":"Gets whether or not fortune card is currently displaying rear face"},{"title":"isTicketOnScreen","link":"<a href=\"global.html#isTicketOnScreen\">isTicketOnScreen</a>","description":"Checks if ticket is on screen"},{"title":"keyHandler","link":"<a href=\"global.html#keyHandler\">keyHandler</a>","description":"Determines and takes appropriate action during keypress, attached to\nevent listener"},{"title":"loadJsonArr","link":"<a href=\"global.html#loadJsonArr\">loadJsonArr</a>","description":"Loads array from external json file into javascript array"},{"title":"LockedControls","link":"<a href=\"LockedControls.html\">LockedControls</a>","description":"This controller allows the user to move their view around the screen using\ntheir mouse pointer. The absolute camera position is fixed. Both horizontal and\nvertical movement are constrained to predefined limits. Loosely based on code from\nhttps://github.com/mrdoob/three.js/blob/master/examples/jsm/controls/LockedControls.js"},{"title":"onPointerMove","link":"<a href=\"global.html#onPointerMove\">onPointerMove</a>","description":"Event handler for the pointermove event. Updates the pointer state based on\nthe current mouse position"},{"title":"openEightBall","link":"<a href=\"global.html#openEightBall\">openEightBall</a>","description":"Opens starter project 8 ball on the same tab."},{"title":"playBackgroundNoise","link":"<a href=\"global.html#playBackgroundNoise\">playBackgroundNoise</a>","description":"Starts background noise, fading in over 5 seconds"},{"title":"produceFortune","link":"<a href=\"global.html#produceFortune\">produceFortune</a>","description":"Fetches and returns fortune, using API if possible and flagged"},{"title":"produceFortuneFromGPT","link":"<a href=\"global.html#produceFortuneFromGPT\">produceFortuneFromGPT</a>","description":"Takes in a message, queries openAI though serverless function, returns\nresponse"},{"title":"produceRandomNumbers","link":"<a href=\"global.html#produceRandomNumbers\">produceRandomNumbers</a>","description":"Generates an array of n distinct integers spaced between low and high.\nGives back an empty array if no input n, or if there aren't enough numbers\n\t\tbetween high and low to fill the array"},{"title":"removeTicketPrompt","link":"<a href=\"global.html#removeTicketPrompt\">removeTicketPrompt</a>","description":"Removes the ticket prompt"},{"title":"saveAllStates","link":"<a href=\"global.html#saveAllStates\">saveAllStates</a>","description":"Saves all current tickets in user history to local storage"},{"title":"SavedTicket2D","link":"<a href=\"SavedTicket2D.html\">SavedTicket2D</a>","description":"SavedTicket2D class for creating custom HTML elements. This class represents a ticket that\nthe user previously received, and will be displayed in aggregate with the rest of the tickets\nto the user. State can be set to control displayed fortune and lucky numbers."},{"title":"SavedTicket2D#content","link":"<a href=\"SavedTicket2D.html#content\">content</a>","description":"Setter for the content of the SavedTicket2D. Give an object with (string)currentImageFront,\n(string)'currentMessage' and (number array)'currentNumbers' properties. Updates the ticket\ncontent with respective properties"},{"title":"SavedTicket2D#position","link":"<a href=\"SavedTicket2D.html#position\">position</a>","description":"Setter for the position of the ticket."},{"title":"SavedTicket2D#zIndex","link":"<a href=\"SavedTicket2D.html#zIndex\">zIndex</a>","description":"Setter for the z index of the ticket."},{"title":"saveState","link":"<a href=\"global.html#saveState\">saveState</a>","description":"Saves state of ticket to localStorage"},{"title":"setTicketMapToImage","link":"<a href=\"global.html#setTicketMapToImage\">setTicketMapToImage</a>","description":"Sets ticket texture to image at appropriate url for input"},{"title":"shakeScreen","link":"<a href=\"global.html#shakeScreen\">shakeScreen</a>","description":"Shakes document body"},{"title":"shootRay","link":"<a href=\"global.html#shootRay\">shootRay</a>","description":"Shoots ray from camera and measures instersection with hitbox of\nticket; if hit, displays cards"},{"title":"shouldFlickerOff","link":"<a href=\"global.html#shouldFlickerOff\">shouldFlickerOff</a>","description":"Helper func to decide if lights should turn off"},{"title":"shouldFlickerOn","link":"<a href=\"global.html#shouldFlickerOn\">shouldFlickerOn</a>","description":"Helper func to decide if lights should turn back on"},{"title":"slide","link":"<a href=\"global.html#slide\">slide</a>","description":"Slides the Cards left or right"},{"title":"slide","link":"<a href=\"global.html#slide\">slide</a>","description":"Animates movement of cards either left or right"},{"title":"storeButtonHandler","link":"<a href=\"global.html#storeButtonHandler\">storeButtonHandler</a>","description":"Stores the ticket if called with the saveTicket Button, otherwise\nwill just discard it (do nothing)"},{"title":"tellPageLoaded","link":"<a href=\"global.html#tellPageLoaded\">tellPageLoaded</a>","description":"Adds event listeners to trigger dismissal of splash screen\nand enabling of controls on any user input (key/mouse)"},{"title":"template","link":"<a href=\"global.html#template\">template</a>","description":"Location of template for ticket structure to use"},{"title":"ticketHandler","link":"<a href=\"global.html#ticketHandler\">ticketHandler</a>","description":"When called with OPEN, plays thunder, shakes Zoltar, and displays the ticket and disables\nZoltar to prevent new tickets reappearing\nWHen called with CLOSE, simply closes the ticket."},{"title":"toggleAudio","link":"<a href=\"global.html#toggleAudio\">toggleAudio</a>","description":"Toggles muteAudio and volume icons when called. Sets muteAudio to localStorage so that\nsetting is persistent between page loads."},{"title":"toggleClassToArr","link":"<a href=\"global.html#toggleClassToArr\">toggleClassToArr</a>","description":"Toggles a specific class for every HTML element in an array"},{"title":"toggleItems","link":"<a href=\"global.html#toggleItems\">toggleItems</a>","description":"Toggles items display properties"},{"title":"toggleTicketOff","link":"<a href=\"global.html#toggleTicketOff\">toggleTicketOff</a>","description":"Slides ticket off screen"},{"title":"toggleTicketOn","link":"<a href=\"global.html#toggleTicketOn\">toggleTicketOn</a>","description":"Slides ticket up from bottom of screen"},{"title":"translateCards","link":"<a href=\"global.html#translateCards\">translateCards</a>","description":"Positions ticket history card on screen relative to the main card that\nis being displayed."},{"title":"translateCards","link":"<a href=\"global.html#translateCards\">translateCards</a>","description":"Positions cards on screen relative to currently selected card"},{"title":"update","link":"<a href=\"global.html#update\">update</a>","description":"Updates the controls. This should be called in an animation loop, and must be passed the\ntime delta since the last update. Updates the look direction and spherical coordinates\nbased on the current mouse position and look speed."},{"title":"updateCounterSpan","link":"<a href=\"global.html#updateCounterSpan\">updateCounterSpan</a>","description":"Updates the counter between the arrow buttons on the ticket history screen"},{"title":"updateCounts","link":"<a href=\"global.html#updateCounts\">updateCounts</a>","description":"Prints new count of tickets to the screen and edits ticket selector values"},{"title":"updateSliderFromInput","link":"<a href=\"global.html#updateSliderFromInput\">updateSliderFromInput</a>","description":"Fetch and react to user input from text field to move to corresponding card"},{"title":"updateTicket","link":"<a href=\"global.html#updateTicket\">updateTicket</a>","description":"Places current state onto ticket"},{"title":"updateticketHistoryCount","link":"<a href=\"global.html#updateticketHistoryCount\">updateticketHistoryCount</a>","description":"updates ticket count on yellow button"},{"title":"validateNumInput","link":"<a href=\"global.html#validateNumInput\">validateNumInput</a>","description":"Checks if input string is a number within bounds, clamps otherwise"},{"title":"zoltarHandler","link":"<a href=\"global.html#zoltarHandler\">zoltarHandler</a>","description":"Zoltar image event Listener.\nDisabled when ticket is already displayed\nThunder is played when Zoltar shakes, then a\nticket pops up."}]}